{"version":3,"sources":["logo.svg","components/LaunchesItem.js","contexts/FilterContext.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","id","name","date_local","success","className","classNames","format","to","FilterContext","createContext","FilterContextProvider","props","useState","successFilter","setSucessFilter","failFilter","setFailFilter","Provider","value","handleSuccessFilter","filter","children","MissionKey","useContext","handleCheckbox","e","target","type","onChange","checked","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","console","log","filteredLaunches","launches","totalLaunches","length","sort","a","b","Fragment","map","flight_number","LAUNCH_QUERY","Launch","match","params","variables","rocket","displayLaunch","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.436e8082.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f94464e1.svg\";","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LaunchItem = ({ launch: { id, name, date_local, success } }) => {\r\n  return (\r\n    <div className=\"card card-body mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9\">\r\n          <h4>\r\n            Mission:{' '}\r\n            <span\r\n              className={classNames({\r\n                'text-success': success,\r\n                'text-danger': !success,\r\n              })}\r\n            >\r\n              {name}\r\n            </span>\r\n          </h4>\r\n          <p>\r\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{date_local}</Moment>\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Link to={`/launch/${id}`} className=\"btn btn-secondary\">\r\n            Launch Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LaunchItem;","import React, { useState, createContext } from 'react';\r\n\r\nexport const FilterContext = createContext();\r\n\r\nconst FilterContextProvider = (props) => {\r\n  const [successFilter, setSucessFilter] = useState(false);\r\n  const [failFilter, setFailFilter] = useState(false);\r\n\r\n  const handleSuccessFilter = (filter) => {\r\n    if (filter === 'success') setSucessFilter(!successFilter);\r\n    if (filter === 'fail') setFailFilter(!failFilter);\r\n  };\r\n\r\n  return (\r\n    <FilterContext.Provider\r\n      value={{ successFilter, failFilter, handleSuccessFilter }}\r\n    >\r\n      {props.children}\r\n    </FilterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FilterContextProvider;","import React, { useContext } from 'react';\r\nimport { FilterContext } from '../contexts/FilterContext';\r\n\r\nconst MissionKey = () => {\r\n  const { successFilter, failFilter, handleSuccessFilter } = useContext(\r\n    FilterContext\r\n  );\r\n\r\n  const handleCheckbox = (e) => {\r\n    handleSuccessFilter(e.target.name);\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-3\">\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          name=\"success\"\r\n          onChange={handleCheckbox}\r\n          checked={successFilter}\r\n        />\r\n        <label className=\"form-check-label\">\r\n          <span className=\"px-3 mr-2 bg-success\" /> = Sucess\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          name=\"fail\"\r\n          onChange={handleCheckbox}\r\n          checked={failFilter}\r\n        />\r\n        <label className=\"form-check-label\">\r\n          <span className=\"px-3 mr-2 bg-danger\" /> = Fail\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissionKey;","import React, { useContext } from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport LaunchItem from './LaunchesItem';\r\nimport MissionKey from './MissionKey';\r\nimport { FilterContext } from '../contexts/FilterContext';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n  query LaunchesQuery {\r\n    launches {\r\n      id\r\n      flight_number\r\n      name\r\n      date_local\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\nconst Launches = () => {\r\n  const { successFilter, failFilter } = useContext(FilterContext);\r\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\r\n\r\n  if (loading) return <h4>Loading...</h4>;\r\n  if (error) console.log(error);\r\n\r\n  let filteredLaunches = data.launches;\r\n  let totalLaunches = filteredLaunches.length;\r\n\r\n  if ((successFilter && failFilter) || (!successFilter && !failFilter)) {\r\n    filteredLaunches = data.launches;\r\n    totalLaunches = filteredLaunches.length;\r\n  }\r\n  if (successFilter && !failFilter) {\r\n    filteredLaunches = data.launches.filter((launch) => launch.success);\r\n    totalLaunches = filteredLaunches.length;\r\n  }\r\n  if (failFilter && !successFilter) {\r\n    filteredLaunches = data.launches.filter((launch) => !launch.success);\r\n    totalLaunches = filteredLaunches.length;\r\n  }\r\n\r\n  filteredLaunches.sort((a, b) => (a.date_local < b.date_local ? 1 : -1));\r\n\r\n  const displayLaunches = () => {\r\n    return filteredLaunches.map((launch) => (\r\n      <LaunchItem key={launch.flight_number} launch={launch} />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"display-4 my-3\">\r\n        Launches <small className=\"text-muted\">(total: {totalLaunches})</small>\r\n      </h1>\r\n      <MissionKey />\r\n      {displayLaunches()}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Launches;","import React from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query LaunchQuery($id: String!) {\r\n    launch(id: $id) {\r\n      flight_number\r\n      name\r\n      success\r\n      date_local\r\n      rocket {\r\n        id\r\n        name\r\n        type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Launch = (props) => {\r\n  const { id } = props.match.params;\r\n\r\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {\r\n    variables: { id },\r\n  });\r\n\r\n  const displayLaunch = () => {\r\n    if (loading) return <h4>Loading...</h4>;\r\n    if (error) console.log(error);\r\n\r\n    const { name, flight_number, success, date_local, rocket } = data.launch;\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4 my-3\">\r\n          <span className=\"text-light\">Mission:</span> {name}\r\n        </h1>\r\n        <h4 className=\"mb-3\">Launch Details</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">Flight Number: {flight_number}</li>\r\n          <li className=\"list-group-item\">\r\n            Launch Year: <Moment format=\"YYYY\">{date_local}</Moment>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Launch Successful:{' '}\r\n            <span\r\n              className={classNames({\r\n                'text-success': success,\r\n                'text-danger': !success,\r\n              })}\r\n            >\r\n              {success ? 'Yes' : 'No'}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <h4 className=\"my-3\">Rocket Details</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">Rocket ID: {rocket.id}</li>\r\n          <li className=\"list-group-item\">Rocket Name: {rocket.name}</li>\r\n          <li className=\"list-group-item\">Rocket Type: {rocket.type}</li>\r\n        </ul>\r\n        <hr />\r\n        <Link to=\"/\" className=\"btn btn-secondary\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <React.Fragment>{displayLaunch()}</React.Fragment>;\r\n};\r\n\r\nexport default Launch;","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\nimport logo from './logo.svg';\n\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport FilterContextProvider from './contexts/FilterContext';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <FilterContextProvider>\n        <Router>\n          <div className=\"container\">\n            <img\n              src={logo}\n              alt=\"SpaceX\"\n              style={{ width: 300, display: 'block', margin: 'auto' }}\n            />\n            <Route exact path=\"/\" component={Launches} />\n            <Route exact path=\"/launch/:id\" component={Launch} />\n          </div>\n        </Router>\n      </FilterContextProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}